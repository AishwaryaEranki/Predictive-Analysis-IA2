# -*- coding: utf-8 -*-
"""LVADSUSR67_Aishwarya_lab2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wgi82XuwhqH7BOxXG0k5MrwOIogG8JZ7
"""

from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, mean_squared_error, precision_score, f1_score, recall_score, confusion_matrix, silhouette_score, davies_bouldin_score, calinski_harabasz_score
import time
from sklearn.preprocessing import LabelEncoder, MinMaxScaler
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings('ignore')

from sklearn.linear_model import LinearRegression
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from xgboost import XGBClassifier
from sklearn.cluster import KMeans

data=pd.read_csv('/content/Mall_Customers.csv')
df=pd.DataFrame(data)
df

df.describe()

df.info()

df.isnull().sum()

df['Annual Income (k$)']=df['Annual Income (k$)'].ffill()
df

df.isnull().sum()

df.drop_duplicates()

le=LabelEncoder()
df['Gender']=le.fit_transform(df['Gender'])

scaler=MinMaxScaler()
df[['Age','Spending Score (1-100)']]=scaler.fit_transform(df[['Age','Spending Score (1-100)']])


ml=KMeans(n_clusters=3)
fit=ml.fit_predict(df)

centroids=ml.cluster_centers_
ml.cluster_centers_
#plt.scatter(df['Gender'],df['Spending Score (1-100)'],c=ml.labels_)
#plt.scatter(centroids[:,0],centroids[:,1])
sns.scatterplot(data=df, x='Age', y='Spending Score (1-100)', hue = ml.labels_, palette = 'Set1')
inertia = ml.inertia_
print(f'Inertia: {inertia}')